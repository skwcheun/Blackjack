#BlueJ class context
comment0.params=startBalance
comment0.target=Player(int)
comment0.text=\r\n\ Constructs\ player\ objects\ with\ a\ starting\ balance\r\n
comment1.params=
comment1.target=void\ bet()
comment1.text=\r\n\ Prompts\ user\ input\ to\ bet\ for\ current\ hand,\ only\ allows\ bets\ that\ are\ not\ greater\ than\ balance\ (player\ cannot\ bet\ more\ than\ their\ balance)\r\n
comment10.params=
comment10.target=void\ winHand()
comment10.text=\r\n\ Method\ adds\ twice\ the\ bet\ to\ players\ hand\ for\ winning\ (returns\ bet\ +\ profit\ equal\ to\ bet)\r\n
comment11.params=
comment11.target=void\ winBlackJack()
comment11.text=\r\n\ Method\ adds\ 2.5\ the\ bet\ to\ players\ hand\ for\ hitting\ black\ jack\ (returns\ bet\ +\ profit\ equal\ to\ 1.5*bet)\r\n
comment12.params=
comment12.target=void\ tieHand()
comment12.text=\r\n\ Method\ returns\ bet\ to\ player\ in\ a\ tie\ situation\r\n
comment13.params=
comment13.target=void\ getInsurance()
comment13.text=\r\n\ Method\ returns\ insurance\ to\ player\ if\ dealer\ hits\ blackJack\ and\ player\ is\ insured\r\n
comment14.params=
comment14.target=boolean\ isInsured()
comment14.text=\r\n\ Method\ returns\ if\ player\ is\ insured\r\n
comment15.params=
comment15.target=boolean\ surrendering()
comment15.text=\r\n\ Method\ returns\ if\ player\ is\ surrendering\r\n
comment16.params=
comment16.target=int\ getHand()
comment16.text=\r\n\ Method\ returns\ the\ total\ hand\ value\ of\ player\r\n
comment17.params=
comment17.target=double\ getBalance()
comment17.text=\r\n\ Method\ returns\ player's\ balance\r\n
comment18.params=
comment18.target=boolean\ isBust()
comment18.text=\r\n\ Method\ checks\ to\ see\ if\ player\ is\ bust\ (hand\ over\ 21)\r\n\ If\ player\ is\ bust,\ also\ checks\ to\ see\ if\ player\ has\ ace\ and\ then\ rechecks\r\n
comment19.params=
comment19.target=boolean\ hasAce()
comment19.text=\r\n\ Method\ checks\ to\ see\ if\ player\ has\ an\ ace,\ the\ first\ ace\ found\ will\ change\ the\ value\ to\ 1\ and\ return\ hasAce\ as\ true\r\n\ This\ method\ is\ only\ used\ when\ the\ player\ has\ busted\r\n
comment2.params=tempDeck
comment2.target=void\ hit(Deck)
comment2.text=\r\n\ @param\ tempDeck\ Takes\ in\ a\ deck\ for\ method\ to\ "hit"\ or\ draw\ card\ from\r\n\ Method\ draws\ a\ random\ card\ from\ the\ deck\ given\ and\ adds\ the\ card\ to\ players\ hand,\ \r\n\ Checks\ to\ find\ value\ of\ card\ and\ then\ adds\ to\ array\ of\ cardValues\r\n
comment3.params=tempDeck
comment3.target=void\ doubleDown(Deck)
comment3.text=\r\n\ @param\ tempDeck\ Takes\ in\ a\ random\ deck\ for\ the\ method\ to\ draw\ a\ card\ from\r\n\ Method\ allows\ user\ to\ add\ a\ bet\ up\ to\ the\ original\ bet\ (provided\ they\ have\ sufficient\ funds)\r\n\ Adding\ this\ additional\ bet\ is\ made\ in\ exchange\ for\ hitting\ one\ card\ only\r\n
comment4.params=
comment4.target=void\ split()
comment5.params=
comment5.target=void\ payInsurance()
comment5.text=\r\n\ If\ the\ player\ chooses\ to\ "insure"\ themselves,\ this\ controls\ the\ insurance\ the\ user\ places,\ up\ to\ a\ max\ of\ half\ the\ bet\ (provided\ they\ have\ sufficient\ funds)\r\n\ Gives\ the\ player\ an\ "insured"\ status\ which\ is\ checked\ later\ if\ dealer\ hits\ blackjack\r\n
comment6.params=
comment6.target=void\ surrender()
comment7.params=
comment7.target=void\ nextHand()
comment7.text=\r\n\ Method\ resets\ all\ boolean's\ and\ clears\ arrays\ in\ preparation\ of\ next\ hand\r\n
comment8.params=
comment8.target=void\ showHand()
comment8.text=\r\n\ Method\ prints\ out\ the\ player's\ hand\ (array)\r\n
comment9.params=temp
comment9.target=java.lang.String\ checkInput(java.lang.String)
comment9.text=\r\n\ Method\ is\ used\ to\ check\ for\ valid\ input\r\n
numComments=20
